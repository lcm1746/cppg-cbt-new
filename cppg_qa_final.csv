세트,문제번호,문제,보기,답안,해설
1,1,CPPG 시험에서 가장 중요한 것은?,①기본 개념 이해 ②암기 ③속도 ④운,①,기본 개념을 이해하는 것이 가장 중요합니다.
1,2,다음 중 올바른 것은?,①빠른 속도가 최우선 ②정확성이 최우선 ③둘 다 중요하지 않음 ④개념 이해는 불필요,②,정확성이 속도보다 우선되어야 합니다.
1,3,문제 풀이 순서는?,①문제 읽기 → 보기 확인 → 답 선택 ②바로 답 선택 ③보기만 확인 ④문제만 읽기,①,체계적인 순서로 접근하는 것이 중요합니다.
1,4,시간 관리의 핵심은?,①모든 문제를 풀기 ②어려운 문제 건너뛰기 ③적절한 시간 분배 ④마지막에 몰아서 풀기,③,적절한 시간 분배가 핵심입니다.
1,5,오답 노트의 목적은?,①기록용 ②반복 학습용 ③장식용 ④시간 낭비,②,오답을 통해 반복 학습하는 것이 목적입니다.
2,1,CPPG 시험 시간은?,①60분 ②90분 ③120분 ④150분,③,CPPG 시험은 120분입니다.
2,2,총 문제 수는?,①50문제 ②80문제 ③100문제 ④120문제,③,총 100문제입니다.
2,3,1과목 문제 수는?,①5문제 ②10문제 ③15문제 ④20문제,②,1과목은 10문제입니다.
2,4,2과목 문제 수는?,①15문제 ②20문제 ③25문제 ④30문제,②,2과목은 20문제입니다.
2,5,3과목 문제 수는?,①20문제 ②25문제 ③30문제 ④35문제,②,3과목은 25문제입니다.
3,1,4과목 문제 수는?,①25문제 ②30문제 ③35문제 ④40문제,②,4과목은 30문제입니다.
3,2,5과목 문제 수는?,①10문제 ②15문제 ③20문제 ④25문제,②,5과목은 15문제입니다.
3,3,시험 시작 전 준비사항은?,①연필만 준비 ②신분증과 필기구 ③아무것도 안 가져가기 ④핸드폰만,②,신분증과 필기구를 준비해야 합니다.
3,4,시험 중 주의사항은?,①다른 사람 답 보기 ②독립적으로 풀기 ③대화하기 ④음식 먹기,②,독립적으로 문제를 풀어야 합니다.
3,5,시험 종료 후 해야 할 일은?,①바로 집에 가기 ②답안지 제출 확인 ③친구와 대화 ④음식 먹기,②,답안지 제출을 확인해야 합니다.
4,1,프로그래밍 언어의 기본 요소는?,①변수와 함수 ②웹사이트 ③게임 ④음악,①,변수와 함수는 프로그래밍의 기본 요소입니다.
4,2,알고리즘의 정의는?,①무작위 행동 ②문제 해결을 위한 단계적 절차 ③게임 규칙 ④음악 작곡,②,알고리즘은 문제 해결을 위한 단계적 절차입니다.
4,3,데이터 구조의 종류가 아닌 것은?,①배열 ②리스트 ③음악 ④트리,③,음악은 데이터 구조가 아닙니다.
4,4,객체지향 프로그래밍의 특징은?,①절차적 처리 ②캡슐화, 상속, 다형성 ③함수형 ④논리형,②,캡슐화, 상속, 다형성이 객체지향의 특징입니다.
4,5,데이터베이스의 목적은?,①게임 개발 ②데이터 저장과 관리 ③음악 재생 ④영상 편집,②,데이터베이스는 데이터 저장과 관리가 목적입니다.
4,6,네트워크 프로토콜의 예는?,①HTTP, TCP/IP ②음악 파일 ③게임 캐릭터 ④웹 디자인,①,HTTP, TCP/IP는 네트워크 프로토콜입니다.
4,7,보안의 3요소는?,①기밀성, 무결성, 가용성 ②속도, 크기, 색상 ③음악, 영화, 게임 ④웹, 앱, 서버,①,기밀성, 무결성, 가용성이 보안의 3요소입니다.
4,8,클라우드 컴퓨팅의 장점은?,①높은 비용 ②확장성과 유연성 ③느린 속도 ④복잡한 관리,②,확장성과 유연성이 클라우드의 장점입니다.
4,9,API의 역할은?,①게임 개발 ②애플리케이션 간 데이터 교환 ③음악 재생 ④영상 편집,②,API는 애플리케이션 간 데이터 교환을 담당합니다.
4,10,버전 관리 시스템의 예는?,①Git ②음악 플레이어 ③게임 엔진 ④웹 브라우저,①,Git은 버전 관리 시스템입니다.
5,1,소프트웨어 개발 생명주기에서 첫 번째 단계는?,①구현 ②요구사항 분석 ③테스트 ④배포,②,요구사항 분석이 첫 번째 단계입니다.
5,2,테스트의 종류가 아닌 것은?,①단위 테스트 ②통합 테스트 ③음악 테스트 ④시스템 테스트,③,음악 테스트는 테스트 종류가 아닙니다.
5,3,디버깅의 목적은?,①버그 찾기와 수정 ②게임 개발 ③음악 작곡 ④영상 편집,①,디버깅은 버그를 찾고 수정하는 것이 목적입니다.
5,4,코드 리뷰의 장점은?,①개발 속도 저하 ②코드 품질 향상 ③복잡성 증가 ④비용 증가,②,코드 품질 향상이 코드 리뷰의 장점입니다.
5,5,문서화의 중요성은?,①불필요한 작업 ②유지보수성 향상 ③개발 지연 ④비용 증가,②,문서화는 유지보수성 향상에 중요합니다. 